{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52],"program":"/Users/mguimara/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","num_derive","/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","--color","never","--crate-type","proc-macro","--emit=dep-info,link","-C","prefer-dynamic","-C","debuginfo=2","-C","metadata=dfdb80749d70a50c","-C","extra-filename=-dfdb80749d70a50c","--out-dir","/Users/mguimara/Desktop/tinyraycaster-rust/target/rls/debug/deps","-L","dependency=/Users/mguimara/Desktop/tinyraycaster-rust/target/rls/debug/deps","--extern","proc_macro2=/Users/mguimara/Desktop/tinyraycaster-rust/target/rls/debug/deps/libproc_macro2-b64c4264db7c8dad.rlib","--extern","quote=/Users/mguimara/Desktop/tinyraycaster-rust/target/rls/debug/deps/libquote-c39789ed2aaf53c0.rlib","--extern","syn=/Users/mguimara/Desktop/tinyraycaster-rust/target/rls/debug/deps/libsyn-136f42c5f44554e1.rlib","--cap-lints","allow","--cfg","has_i128","--error-format=json","--sysroot","/Users/mguimara/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,68,101,115,107,116,111,112,47,116,105,110,121,114,97,121,99,97,115,116,101,114,45,114,117,115,116,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,110,117,109,95,100,101,114,105,118,101,45,100,102,100,98,56,48,55,52,57,100,55,48,97,53,48,99,46,100,121,108,105,98]},"prelude":{"crate_id":{"name":"num_derive","disambiguator":[12533641140219832945,1805394551257334451]},"crate_root":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src","external_crates":[{"file_name":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4680476137390187807,17118232108371533317]}},{"file_name":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[395860541893199504,14119727998271152369]}},{"file_name":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1883751235990237101,13050952199660841280]}},{"file_name":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[14992191205204974336,187257134115189521]}},{"file_name":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","num":5,"id":{"name":"libc","disambiguator":[13711397750981643997,5466272945196031893]}},{"file_name":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","num":6,"id":{"name":"unwind","disambiguator":[3859305508273286470,8854496368734295790]}},{"file_name":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","num":7,"id":{"name":"panic_unwind","disambiguator":[3472742474031782457,1873693969544132989]}},{"file_name":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","num":8,"id":{"name":"proc_macro","disambiguator":[16254851686082582541,16202882479275089257]}},{"file_name":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","num":9,"id":{"name":"proc_macro2","disambiguator":[4229772899061976918,7103178265237997527]}},{"file_name":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","num":10,"id":{"name":"unicode_xid","disambiguator":[16656925830672324300,713802558293919352]}},{"file_name":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","num":11,"id":{"name":"quote","disambiguator":[7223919066062760609,940689413849920019]}},{"file_name":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","num":12,"id":{"name":"syn","disambiguator":[10040848620196590892,9539174545827966447]}}],"span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":28580,"line_start":11,"line_end":799,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":28580,"line_start":11,"line_end":799,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/mguimara/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48}],"decl_id":null,"docs":" Procedural macros to derive numeric traits in Rust.","sig":null,"attributes":[{"value":"crate_type = \"proc-macro\"","span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":501,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"recursion_limit = \"512\"","span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":560,"byte_end":587,"line_start":13,"line_end":13,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4493,"byte_end":4507,"line_start":166,"line_end":166,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"::from_primitive","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::FromPrimitive`][from] for simple enums and newtypes.","sig":null,"attributes":[{"value":"proc_macro_derive(FromPrimitive)","span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4450,"byte_end":4485,"line_start":165,"line_end":165,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9905,"byte_end":9917,"line_start":334,"line_end":334,"column_start":8,"column_end":20},"name":"to_primitive","qualname":"::to_primitive","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::ToPrimitive`][to] for simple enums and newtypes.","sig":null,"attributes":[{"value":"proc_macro_derive(ToPrimitive)","span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9864,"byte_end":9897,"line_start":333,"line_end":333,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14966,"byte_end":14973,"line_start":465,"line_end":465,"column_start":8,"column_end":15},"name":"num_ops","qualname":"::num_ops","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::NumOps`][num_ops] for newtypes.  The inner type must already implement\n `NumOps`.","sig":null,"attributes":[{"value":"proc_macro_derive(NumOps)","span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14930,"byte_end":14958,"line_start":464,"line_end":464,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16731,"byte_end":16739,"line_start":513,"line_end":513,"column_start":8,"column_end":16},"name":"num_cast","qualname":"::num_cast","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::NumCast`][num_cast] for newtypes.  The inner type must already implement\n `NumCast`.","sig":null,"attributes":[{"value":"proc_macro_derive(NumCast)","span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16694,"byte_end":16723,"line_start":512,"line_end":512,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17542,"byte_end":17546,"line_start":536,"line_end":536,"column_start":8,"column_end":12},"name":"zero","qualname":"::zero","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::Zero`][zero] for newtypes.  The inner type must already implement `Zero`.","sig":null,"attributes":[{"value":"proc_macro_derive(Zero)","span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17508,"byte_end":17534,"line_start":535,"line_end":535,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18421,"byte_end":18424,"line_start":562,"line_end":562,"column_start":8,"column_end":11},"name":"one","qualname":"::one","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::One`][one] for newtypes.  The inner type must already implement `One`.","sig":null,"attributes":[{"value":"proc_macro_derive(One)","span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18388,"byte_end":18413,"line_start":561,"line_end":561,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19280,"byte_end":19283,"line_start":588,"line_end":588,"column_start":8,"column_end":11},"name":"num","qualname":"::num","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::Num`][num] for newtypes.  The inner type must already implement `Num`.","sig":null,"attributes":[{"value":"proc_macro_derive(Num)","span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19247,"byte_end":19272,"line_start":587,"line_end":587,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20204,"byte_end":20209,"line_start":613,"line_end":613,"column_start":8,"column_end":13},"name":"float","qualname":"::float","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::Float`][float] for newtypes.  The inner type must already implement\n `Float`.","sig":null,"attributes":[{"value":"proc_macro_derive(Float)","span":{"file_name":[47,85,115,101,114,115,47,109,103,117,105,109,97,114,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20169,"byte_end":20196,"line_start":612,"line_end":612,"column_start":1,"column_end":28}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}